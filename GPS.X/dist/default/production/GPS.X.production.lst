

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Sep 29 21:15:44 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	functab,global,reloc=256,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.40
    29                           ; Generated 01/12/2016 GMT
    30                           ; 
    31                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F886 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138                           
   139                           	psect	nvCOMMON
   140  0079                     __pnvCOMMON:	
   141  0079                     __UartReceiveByte:	
   142  0079                     	ds	1
   143                           
   144                           	psect	nvBANK0
   145  0058                     __pnvBANK0:	
   146  0058                     __UartInit:	
   147  0058                     	ds	1
   148  0059                     __UartSendByte:	
   149  0059                     	ds	1
   150  001A                     _RCREG	set	26
   151  0019                     _TXREG	set	25
   152  00C4                     _CREN	set	196
   153  005F                     _GIE	set	95
   154  005E                     _PEIE	set	94
   155  0065                     _RCIF	set	101
   156  00C7                     _SPEN	set	199
   157  0064                     _TXIF	set	100
   158  008F                     _OSCCONbits	set	143
   159  0099                     _SPBRG	set	153
   160  04C2                     _BRGH	set	1218
   161  0465                     _RCIE	set	1125
   162  04C4                     _SYNC	set	1220
   163  043E                     _TRISC6	set	1086
   164  043F                     _TRISC7	set	1087
   165  04C5                     _TXEN	set	1221
   166  0188                     _ANSEL	set	392
   167  0189                     _ANSELH	set	393
   168                           
   169                           	psect	strings
   170  002A                     __pstrings:	
   171  002A                     stringtab:	
   172  002A                     __stringtab:	
   173                           
   174                           ;	String table - string pointers are 1 byte each
   175  002A  1BFF               	btfsc	btemp+1,7
   176  002B  2834               	ljmp	stringcode
   177  002C  1383               	bcf	3,7
   178  002D  187F               	btfsc	btemp+1,0
   179  002E  1783               	bsf	3,7
   180  002F  0800               	movf	0,w
   181  0030  0A84               	incf	4,f
   182  0031  1903               	skipnz
   183  0032  0AFF               	incf	btemp+1,f
   184  0033  0008               	return
   185  0034                     stringcode:	
   186  0034                     stringdir:	
   187  0034  3000               	movlw	high stringdir
   188  0035  008A               	movwf	10
   189  0036  0804               	movf	4,w
   190  0037  0A84               	incf	4,f
   191  0038  0782               	addwf	2,f
   192  0039                     __stringbase:	
   193  0039  3400               	retlw	0
   194  003A                     __end_of__stringtab:	
   195  003A                     STR_3:	
   196  003A  340D               	retlw	13
   197  003B  340A               	retlw	10
   198  003C  344C               	retlw	76	;'L'
   199  003D  346F               	retlw	111	;'o'
   200  003E  346E               	retlw	110	;'n'
   201  003F  3467               	retlw	103	;'g'
   202  0040  3469               	retlw	105	;'i'
   203  0041  3474               	retlw	116	;'t'
   204  0042  3475               	retlw	117	;'u'
   205  0043  3464               	retlw	100	;'d'
   206  0044  3465               	retlw	101	;'e'
   207  0045  343A               	retlw	58	;':'
   208  0046  3420               	retlw	32	;' '
   209  0047  3400               	retlw	0
   210  0048                     STR_2:	
   211  0048  340D               	retlw	13
   212  0049  340A               	retlw	10
   213  004A  340A               	retlw	10
   214  004B  344C               	retlw	76	;'L'
   215  004C  3461               	retlw	97	;'a'
   216  004D  3474               	retlw	116	;'t'
   217  004E  3469               	retlw	105	;'i'
   218  004F  3474               	retlw	116	;'t'
   219  0050  3475               	retlw	117	;'u'
   220  0051  3464               	retlw	100	;'d'
   221  0052  3465               	retlw	101	;'e'
   222  0053  343A               	retlw	58	;':'
   223  0054  3420               	retlw	32	;' '
   224  0055  3400               	retlw	0
   225  0056                     STR_1:	
   226  0056  3457               	retlw	87	;'W'
   227  0057  3465               	retlw	101	;'e'
   228  0058  346C               	retlw	108	;'l'
   229  0059  3463               	retlw	99	;'c'
   230  005A  346F               	retlw	111	;'o'
   231  005B  346D               	retlw	109	;'m'
   232  005C  3465               	retlw	101	;'e'
   233  005D  340D               	retlw	13
   234  005E  340A               	retlw	10
   235  005F  3400               	retlw	0
   236                           
   237                           ; #config settings
   238  0000                     
   239                           	psect	cinit
   240  0015                     start_initialization:	
   241  0015                     __initialization:	
   242                           
   243                           ; Clear objects allocated to COMMON
   244  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   245  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   246                           
   247                           ; Clear objects allocated to BANK0
   248  0017  1383               	bcf	3,7	;select IRP bank0
   249  0018  303F               	movlw	low __pbssBANK0
   250  0019  0084               	movwf	4
   251  001A  3058               	movlw	low (__pbssBANK0+25)
   252  001B  120A  118A  231D  120A  118A  	fcall	clear_ram0
   253                           
   254                           ; Clear objects allocated to BANK1
   255  0020  30A0               	movlw	low __pbssBANK1
   256  0021  0084               	movwf	4
   257  0022  30CD               	movlw	low (__pbssBANK1+45)
   258  0023  120A  118A  231D   	fcall	clear_ram0
   259  0026                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0026                     __end_of__initialization:	
   263  0026  0183               	clrf	3
   264  0027  120A  118A  29DF   	ljmp	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMMON
   267  0077                     __pbssCOMMON:	
   268  0077                     _rec_count:	
   269  0077                     	ds	2
   270                           
   271                           	psect	bssBANK0
   272  003F                     __pbssBANK0:	
   273  003F                     _gps:	
   274  003F                     	ds	23
   275  0056                     __GPS_location_avail:	
   276  0056                     	ds	2
   277                           
   278                           	psect	bssBANK1
   279  00A0                     __pbssBANK1:	
   280  00A0                     _UartBuffer:	
   281  00A0                     	ds	45
   282                           
   283                           	psect	clrtext
   284  031D                     clear_ram0:	
   285                           ;	Called with FSR containing the base address, and
   286                           ;	W with the last address+1
   287                           
   288  031D  0064               	clrwdt	;clear the watchdog before getting into this loop
   289  031E                     clrloop0:	
   290  031E  0180               	clrf	0	;clear RAM location pointed to by FSR
   291  031F  0A84               	incf	4,f	;increment pointer
   292  0320  0604               	xorwf	4,w	;XOR with final address
   293  0321  1903               	btfsc	3,2	;have we reached the end yet?
   294  0322  3400               	retlw	0	;all done for this memory range, return
   295  0323  0604               	xorwf	4,w	;XOR again to restore value
   296  0324  2B1E               	goto	clrloop0	;do the next byte
   297                           
   298                           	psect	cstackBANK1
   299  00CD                     __pcstackBANK1:	
   300  00CD                     main@i:	
   301                           
   302                           ; 2 bytes @ 0x0
   303  00CD                     	ds	2
   304  00CF                     main@gps:	
   305                           
   306                           ; 23 bytes @ 0x2
   307  00CF                     	ds	23
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:	
   311  0070                     ?__GPSInit:	
   312  0070                     ?__GPSRoutines:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_my_serial_init:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_receive_byte:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_ISR:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ??_ISR:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0070                     	ds	4
   333  0074                     ??__GPSInit:	
   334  0074                     ??_my_serial_init:	
   335                           ; 1 bytes @ 0x4
   336                           
   337  0074                     ?_send_byte:	
   338                           ; 1 bytes @ 0x4
   339                           
   340  0074                     ??_receive_byte:	
   341                           ; 1 bytes @ 0x4
   342                           
   343  0074                     send_byte@val:	
   344                           ; 1 bytes @ 0x4
   345                           
   346                           
   347                           ; 1 bytes @ 0x4
   348  0074                     	ds	1
   349  0075                     ??_send_byte:	
   350  0075                     receive_byte@x:	
   351                           ; 1 bytes @ 0x5
   352                           
   353                           
   354                           ; 1 bytes @ 0x5
   355  0075                     	ds	1
   356  0076                     ??__GPSRoutines:	
   357                           
   358                           ; 1 bytes @ 0x6
   359  0076                     	ds	1
   360                           
   361                           	psect	cstackBANK0
   362  0020                     __pcstackBANK0:	
   363  0020                     ?_send_str:	
   364  0020                     ?__GPSValues:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0020                     __GPSRoutines@x:	
   368                           ; 23 bytes @ 0x0
   369                           
   370  0020                     send_str@str:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 2 bytes @ 0x0
   375  0020                     	ds	1
   376  0021                     __GPSRoutines@i:	
   377                           
   378                           ; 2 bytes @ 0x1
   379  0021                     	ds	1
   380  0022                     ??_send_str:	
   381                           
   382                           ; 1 bytes @ 0x2
   383  0022                     	ds	21
   384  0037                     ??__GPSValues:	
   385                           
   386                           ; 1 bytes @ 0x17
   387  0037                     	ds	4
   388  003B                     ??_main:	
   389                           
   390                           ; 1 bytes @ 0x1B
   391  003B                     	ds	4
   392                           
   393                           	psect	maintext
   394  01DF                     __pmaintext:	
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 51 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  gps            23    2[BANK1 ] struct _GPS
   405 ;;  i               2    0[BANK1 ] int 
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : B00/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       0      25       0       0
   417 ;;      Temps:          0       4       0       0       0
   418 ;;      Totals:         0       4      25       0       0
   419 ;;Total ram usage:       29 bytes
   420 ;; Hardware stack levels required when called:    3
   421 ;; This function calls:
   422 ;;		__GPSInit
   423 ;;		__GPSRoutines
   424 ;;		__GPSValues
   425 ;;		_send_byte
   426 ;;		_send_str
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _main
   434  01DF                     _main:	
   435                           
   436                           ;main.c: 52: int i=0;
   437                           
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   440  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   441  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   442  01E1  01CD               	clrf	main@i^(0+128)
   443  01E2  01CE               	clrf	(main@i+1)^(0+128)
   444                           
   445                           ;main.c: 53: GPS gps;
   446                           ;main.c: 54: OSCCONbits.IRCF = 7;
   447  01E3  3070               	movlw	112
   448  01E4  048F               	iorwf	15,f	;volatile
   449                           
   450                           ;main.c: 55: ANSEL = ANSELH = 0;
   451  01E5  1683               	bsf	3,5	;RP0=1, select bank3
   452  01E6  1703               	bsf	3,6	;RP1=1, select bank3
   453  01E7  0189               	clrf	9	;volatile
   454  01E8  0188               	clrf	8	;volatile
   455                           
   456                           ;main.c: 56: _UartReceiveByte = &receive_byte;
   457  01E9  3004               	movlw	(low (fp__receive_byte-fpbase))& (0+255)
   458  01EA  1283               	bcf	3,5	;RP0=0, select bank0
   459  01EB  1303               	bcf	3,6	;RP1=0, select bank0
   460  01EC  00BB               	movwf	??_main
   461  01ED  083B               	movf	??_main,w
   462  01EE  00F9               	movwf	__UartReceiveByte
   463                           
   464                           ;main.c: 57: _UartInit = &my_serial_init;
   465  01EF  3001               	movlw	(low (fp__my_serial_init-fpbase))& (0+255)
   466  01F0  00BB               	movwf	??_main
   467  01F1  083B               	movf	??_main,w
   468  01F2  00D8               	movwf	__UartInit
   469                           
   470                           ;main.c: 58: _UartSendByte = &send_byte;
   471  01F3  3007               	movlw	(low (fp__send_byte-fpbase))& (0+255)
   472  01F4  00BB               	movwf	??_main
   473  01F5  083B               	movf	??_main,w
   474  01F6  00D9               	movwf	__UartSendByte
   475                           
   476                           ;main.c: 59: _GPSInit();
   477  01F7  120A  118A  2314  120A  118A  	fcall	__GPSInit
   478                           
   479                           ;main.c: 60: send_str("Welcome\r\n");
   480  01FC  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   481  01FD  1283               	bcf	3,5	;RP0=0, select bank0
   482  01FE  1303               	bcf	3,6	;RP1=0, select bank0
   483  01FF  00A0               	movwf	send_str@str
   484  0200  3080               	movlw	128
   485  0201  00A1               	movwf	send_str@str+1
   486  0202  120A  118A  2289  120A  118A  	fcall	_send_str
   487  0207                     l1007:	
   488                           ;main.c: 62: while(1){
   489                           
   490                           
   491                           ;main.c: 63: if(_GPS_location_avail){
   492  0207  1283               	bcf	3,5	;RP0=0, select bank0
   493  0208  1303               	bcf	3,6	;RP1=0, select bank0
   494  0209  0856               	movf	__GPS_location_avail,w
   495  020A  0457               	iorwf	__GPS_location_avail+1,w
   496  020B  1903               	btfsc	3,2
   497  020C  2A83               	goto	l1027
   498                           
   499                           ;main.c: 64: gps = _GPSValues();
   500  020D  120A  118A  22B1  120A  118A  	fcall	__GPSValues
   501  0212  30CF               	movlw	main@gps& (0+255)
   502  0213  0084               	movwf	4
   503  0214  1283               	bcf	3,5	;RP0=0, select bank0
   504  0215  1303               	bcf	3,6	;RP1=0, select bank0
   505  0216  3020               	movlw	low ?__GPSValues
   506  0217  00BB               	movwf	??_main
   507  0218  0804               	movf	4,w
   508  0219  00BC               	movwf	??_main+1
   509  021A  3017               	movlw	23
   510  021B  00BD               	movwf	??_main+2
   511  021C                     u520:	
   512  021C  083B               	movf	??_main,w
   513  021D  0084               	movwf	4
   514  021E  1383               	bcf	3,7	;select IRP bank0
   515  021F  0800               	movf	0,w
   516  0220  00BE               	movwf	??_main+3
   517  0221  0ABB               	incf	??_main,f
   518  0222  083C               	movf	??_main+1,w
   519  0223  0084               	movwf	4
   520  0224  083E               	movf	??_main+3,w
   521  0225  0080               	movwf	0
   522  0226  0ABC               	incf	??_main+1,f
   523  0227  0BBD               	decfsz	??_main+2,f
   524  0228  2A1C               	goto	u520
   525                           
   526                           ;main.c: 65: send_str("\r\n\nLatitude: ");
   527  0229  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   528  022A  00A0               	movwf	send_str@str
   529  022B  3080               	movlw	128
   530  022C  00A1               	movwf	send_str@str+1
   531  022D  120A  118A  2289  120A  118A  	fcall	_send_str
   532                           
   533                           ;main.c: 66: send_str(gps.latitude);
   534  0232  30CF               	movlw	(low (main@gps| 0))& (0+255)
   535  0233  1283               	bcf	3,5	;RP0=0, select bank0
   536  0234  1303               	bcf	3,6	;RP1=0, select bank0
   537  0235  00A0               	movwf	send_str@str
   538  0236  3000               	movlw	0
   539  0237  00A1               	movwf	send_str@str+1
   540  0238  120A  118A  2289  120A  118A  	fcall	_send_str
   541                           
   542                           ;main.c: 67: send_byte(' ');
   543  023D  3020               	movlw	32
   544  023E  1283               	bcf	3,5	;RP0=0, select bank0
   545  023F  1303               	bcf	3,6	;RP1=0, select bank0
   546  0240  00BB               	movwf	??_main
   547  0241  083B               	movf	??_main,w
   548  0242  00F4               	movwf	send_byte@val
   549  0243  120A  118A  22E7  120A  118A  	fcall	_send_byte
   550                           
   551                           ;main.c: 68: send_byte(gps.lat_cardinal);
   552  0248  1683               	bsf	3,5	;RP0=1, select bank1
   553  0249  1303               	bcf	3,6	;RP1=0, select bank1
   554  024A  0864               	movf	(main@gps^(0+128)+21),w
   555  024B  1283               	bcf	3,5	;RP0=0, select bank0
   556  024C  1303               	bcf	3,6	;RP1=0, select bank0
   557  024D  00BB               	movwf	??_main
   558  024E  083B               	movf	??_main,w
   559  024F  00F4               	movwf	send_byte@val
   560  0250  120A  118A  22E7  120A  118A  	fcall	_send_byte
   561                           
   562                           ;main.c: 69: send_str("\r\nLongitude: ");
   563  0255  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   564  0256  1283               	bcf	3,5	;RP0=0, select bank0
   565  0257  1303               	bcf	3,6	;RP1=0, select bank0
   566  0258  00A0               	movwf	send_str@str
   567  0259  3080               	movlw	128
   568  025A  00A1               	movwf	send_str@str+1
   569  025B  120A  118A  2289  120A  118A  	fcall	_send_str
   570                           
   571                           ;main.c: 70: send_str(gps.longitude);
   572  0260  30D9               	movlw	(low ((main@gps| 0+10)))& (0+255)
   573  0261  1283               	bcf	3,5	;RP0=0, select bank0
   574  0262  1303               	bcf	3,6	;RP1=0, select bank0
   575  0263  00A0               	movwf	send_str@str
   576  0264  3000               	movlw	0
   577  0265  00A1               	movwf	send_str@str+1
   578  0266  120A  118A  2289  120A  118A  	fcall	_send_str
   579                           
   580                           ;main.c: 71: send_byte(' ');
   581  026B  3020               	movlw	32
   582  026C  1283               	bcf	3,5	;RP0=0, select bank0
   583  026D  1303               	bcf	3,6	;RP1=0, select bank0
   584  026E  00BB               	movwf	??_main
   585  026F  083B               	movf	??_main,w
   586  0270  00F4               	movwf	send_byte@val
   587  0271  120A  118A  22E7  120A  118A  	fcall	_send_byte
   588                           
   589                           ;main.c: 72: send_byte(gps.lon_cardinal);
   590  0276  1683               	bsf	3,5	;RP0=1, select bank1
   591  0277  1303               	bcf	3,6	;RP1=0, select bank1
   592  0278  0865               	movf	(main@gps^(0+128)+22),w
   593  0279  1283               	bcf	3,5	;RP0=0, select bank0
   594  027A  1303               	bcf	3,6	;RP1=0, select bank0
   595  027B  00BB               	movwf	??_main
   596  027C  083B               	movf	??_main,w
   597  027D  00F4               	movwf	send_byte@val
   598  027E  120A  118A  22E7  120A  118A  	fcall	_send_byte
   599  0283                     l1027:	
   600                           
   601                           ;main.c: 74: }
   602                           ;main.c: 75: _GPSRoutines();
   603  0283  120A  118A  210F  120A  118A  	fcall	__GPSRoutines
   604  0288  2A07               	goto	l1007
   605  0289                     __end_of_main:	
   606                           
   607                           	psect	text1
   608  0289                     __ptext1:	
   609 ;; *************** function _send_str *****************
   610 ;; Defined at:
   611 ;;		line 46 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  str             2    0[BANK0 ] PTR unsigned char 
   614 ;;		 -> STR_3(14), STR_2(14), main@gps(23), STR_1(10), 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       2       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       1       0       0       0
   629 ;;      Totals:         0       3       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    2
   633 ;; This function calls:
   634 ;;		_send_byte
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _send_str
   642  0289                     _send_str:	
   643  0289                     l913:	
   644                           ;main.c: 48: while(*str)
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _send_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   648                           
   649  0289  1283               	bcf	3,5	;RP0=0, select bank0
   650  028A  1303               	bcf	3,6	;RP1=0, select bank0
   651  028B  0821               	movf	send_str@str+1,w
   652  028C  00FF               	movwf	127
   653  028D  0820               	movf	send_str@str,w
   654  028E  0084               	movwf	4
   655  028F  120A  118A  202A  120A  118A  	fcall	stringtab
   656  0294  3A00               	xorlw	0
   657  0295  1903               	btfsc	3,2
   658  0296  0008               	return
   659                           
   660                           ;main.c: 49: send_byte(*str++);
   661  0297  1283               	bcf	3,5	;RP0=0, select bank0
   662  0298  1303               	bcf	3,6	;RP1=0, select bank0
   663  0299  0821               	movf	send_str@str+1,w
   664  029A  00FF               	movwf	127
   665  029B  0820               	movf	send_str@str,w
   666  029C  0084               	movwf	4
   667  029D  120A  118A  202A  120A  118A  	fcall	stringtab
   668  02A2  00A2               	movwf	??_send_str
   669  02A3  0822               	movf	??_send_str,w
   670  02A4  00F4               	movwf	send_byte@val
   671  02A5  120A  118A  22E7  120A  118A  	fcall	_send_byte
   672  02AA  3001               	movlw	1
   673  02AB  1283               	bcf	3,5	;RP0=0, select bank0
   674  02AC  1303               	bcf	3,6	;RP1=0, select bank0
   675  02AD  07A0               	addwf	send_str@str,f
   676  02AE  1803               	skipnc
   677  02AF  0AA1               	incf	send_str@str+1,f
   678  02B0  2A89               	goto	l913
   679  02B1                     __end_of_send_str:	
   680                           
   681                           	psect	text2
   682  02E7                     __ptext2:	
   683 ;; *************** function _send_byte *****************
   684 ;; Defined at:
   685 ;;		line 25 in file "main.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  val             1    4[COMMON] unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         1       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0
   701 ;;      Temps:          2       0       0       0       0
   702 ;;      Totals:         3       0       0       0       0
   703 ;;Total ram usage:        3 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_send_str
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _send_byte
   716  02E7                     _send_byte:	
   717                           
   718                           ;main.c: 27: TXREG=val;
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _send_byte: [wreg]
   722  02E7  0874               	movf	send_byte@val,w
   723  02E8  1283               	bcf	3,5	;RP0=0, select bank0
   724  02E9  1303               	bcf	3,6	;RP1=0, select bank0
   725  02EA  0099               	movwf	25	;volatile
   726  02EB                     l58:	
   727                           ;main.c: 28: while(!TXIF);
   728                           
   729  02EB  1E0C               	btfss	12,4	;volatile
   730  02EC  2AEB               	goto	l58
   731                           
   732                           ;main.c: 29: TXIF=0;
   733  02ED  120C               	bcf	12,4	;volatile
   734                           
   735                           ;main.c: 30: _delay((unsigned long)((1)*(8e6/4000.0)));
   736  02EE  3003               	movlw	3
   737  02EF  00F6               	movwf	??_send_byte+1
   738  02F0  3097               	movlw	151
   739  02F1  00F5               	movwf	??_send_byte
   740  02F2                     u537:	
   741  02F2  0BF5               	decfsz	??_send_byte,f
   742  02F3  2AF2               	goto	u537
   743  02F4  0BF6               	decfsz	??_send_byte+1,f
   744  02F5  2AF2               	goto	u537
   745  02F6  2AF7               	nop2
   746  02F7  0008               	return
   747  02F8                     __end_of_send_byte:	
   748                           
   749                           	psect	text3
   750  02B1                     __ptext3:	
   751 ;; *************** function __GPSValues *****************
   752 ;; Defined at:
   753 ;;		line 47 in file "GPS.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  23    0[BANK0 ] struct _GPS
   760 ;; Registers used:
   761 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0      23       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       4       0       0       0
   770 ;;      Totals:         0      27       0       0       0
   771 ;;Total ram usage:       27 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; Hardware stack levels required when called:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function __GPSValues
   783  02B1                     __GPSValues:	
   784                           
   785                           ;GPS.c: 48: _GPS_location_avail = 0;
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in __GPSValues: [wreg-fsr0h+status,2+status,0]
   789  02B1  1283               	bcf	3,5	;RP0=0, select bank0
   790  02B2  1303               	bcf	3,6	;RP1=0, select bank0
   791  02B3  01D6               	clrf	__GPS_location_avail
   792  02B4  01D7               	clrf	__GPS_location_avail+1
   793                           
   794                           ;GPS.c: 49: rec_count = 0;
   795  02B5  01F7               	clrf	_rec_count
   796  02B6  01F8               	clrf	_rec_count+1
   797                           
   798                           ;GPS.c: 50: UartBuffer[rec_count] = '\0';
   799  02B7  0877               	movf	_rec_count,w
   800  02B8  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
   801  02B9  0084               	movwf	4
   802  02BA  1383               	bcf	3,7	;select IRP bank1
   803  02BB  0180               	clrf	0
   804                           
   805                           ;GPS.c: 51: return gps;
   806  02BC  3020               	movlw	?__GPSValues& (0+255)
   807  02BD  0084               	movwf	4
   808  02BE  303F               	movlw	low _gps
   809  02BF  00B7               	movwf	??__GPSValues
   810  02C0  0804               	movf	4,w
   811  02C1  00B8               	movwf	??__GPSValues+1
   812  02C2  3017               	movlw	23
   813  02C3  00B9               	movwf	??__GPSValues+2
   814  02C4                     u390:	
   815  02C4  0837               	movf	??__GPSValues,w
   816  02C5  0084               	movwf	4
   817  02C6  1383               	bcf	3,7	;select IRP bank0
   818  02C7  0800               	movf	0,w
   819  02C8  00BA               	movwf	??__GPSValues+3
   820  02C9  0AB7               	incf	??__GPSValues,f
   821  02CA  0838               	movf	??__GPSValues+1,w
   822  02CB  0084               	movwf	4
   823  02CC  083A               	movf	??__GPSValues+3,w
   824  02CD  0080               	movwf	0
   825  02CE  0AB8               	incf	??__GPSValues+1,f
   826  02CF  0BB9               	decfsz	??__GPSValues+2,f
   827  02D0  2AC4               	goto	u390
   828  02D1  0008               	return
   829  02D2                     __end_of__GPSValues:	
   830                           
   831                           	psect	text4
   832  010F                     __ptext4:	
   833 ;; *************** function __GPSRoutines *****************
   834 ;; Defined at:
   835 ;;		line 15 in file "GPS.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  i               2    1[BANK0 ] int 
   840 ;;  x               1    0[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       3       0       0       0
   852 ;;      Temps:          1       0       0       0       0
   853 ;;      Totals:         1       3       0       0       0
   854 ;;Total ram usage:        4 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    2
   857 ;; This function calls:
   858 ;;		Absolute function
   859 ;;		_receive_byte
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function __GPSRoutines
   867  010F                     __GPSRoutines:	
   868                           
   869                           ;GPS.c: 16: int i = 0;
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in __GPSRoutines: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   873  010F  1283               	bcf	3,5	;RP0=0, select bank0
   874  0110  1303               	bcf	3,6	;RP1=0, select bank0
   875  0111  01A1               	clrf	__GPSRoutines@i
   876  0112  01A2               	clrf	__GPSRoutines@i+1
   877                           
   878                           ;GPS.c: 17: char x = _UartReceiveByte();
   879  0113  0879               	movf	__UartReceiveByte,w
   880  0114  120A  118A  2100  120A  118A  	fcall	fptable
   881  0119  00F6               	movwf	??__GPSRoutines
   882  011A  0876               	movf	??__GPSRoutines,w
   883  011B  1283               	bcf	3,5	;RP0=0, select bank0
   884  011C  1303               	bcf	3,6	;RP1=0, select bank0
   885  011D  00A0               	movwf	__GPSRoutines@x
   886                           
   887                           ;GPS.c: 18: if(x=='$')
   888  011E  3024               	movlw	36
   889  011F  0620               	xorwf	__GPSRoutines@x,w
   890  0120  1D03               	btfss	3,2
   891  0121  2924               	goto	l935
   892                           
   893                           ;GPS.c: 19: rec_count =0;
   894  0122  01F7               	clrf	_rec_count
   895  0123  01F8               	clrf	_rec_count+1
   896  0124                     l935:	
   897                           
   898                           ;GPS.c: 20: UartBuffer[rec_count++] = x;
   899  0124  0820               	movf	__GPSRoutines@x,w
   900  0125  00F6               	movwf	??__GPSRoutines
   901  0126  0877               	movf	_rec_count,w
   902  0127  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
   903  0128  0084               	movwf	4
   904  0129  0876               	movf	??__GPSRoutines,w
   905  012A  1383               	bcf	3,7	;select IRP bank1
   906  012B  0080               	movwf	0
   907  012C  3001               	movlw	1
   908  012D  07F7               	addwf	_rec_count,f
   909  012E  1803               	skipnc
   910  012F  0AF8               	incf	_rec_count+1,f
   911  0130  3000               	movlw	0
   912  0131  07F8               	addwf	_rec_count+1,f
   913                           
   914                           ;GPS.c: 21: UartBuffer[rec_count] = '\0';
   915  0132  0877               	movf	_rec_count,w
   916  0133  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
   917  0134  0084               	movwf	4
   918  0135  0180               	clrf	0
   919                           
   920                           ;GPS.c: 22: if(UartBuffer[0] == '$' && rec_count <= 42){
   921  0136  3024               	movlw	36
   922  0137  1683               	bsf	3,5	;RP0=1, select bank1
   923  0138  1303               	bcf	3,6	;RP1=0, select bank1
   924  0139  0620               	xorwf	_UartBuffer^(0+128),w
   925  013A  1D03               	btfss	3,2
   926  013B  29D3               	goto	l985
   927  013C  0878               	movf	_rec_count+1,w
   928  013D  3A80               	xorlw	128
   929  013E  00FF               	movwf	127
   930  013F  3080               	movlw	128
   931  0140  027F               	subwf	127,w
   932  0141  1D03               	skipz
   933  0142  2945               	goto	u425
   934  0143  302B               	movlw	43
   935  0144  0277               	subwf	_rec_count,w
   936  0145                     u425:	
   937  0145  1803               	skipnc
   938  0146  29D3               	goto	l985
   939                           
   940                           ;GPS.c: 23: if(rec_count == 42 && UartBuffer[3] == 'G' && UartBuffer[4] == 'G' && UartBu
      +                          ffer[5] == 'A' ){
   941  0147  302A               	movlw	42
   942  0148  0677               	xorwf	_rec_count,w
   943  0149  0478               	iorwf	_rec_count+1,w
   944  014A  1D03               	btfss	3,2
   945  014B  0008               	return
   946  014C  3047               	movlw	71
   947  014D  1683               	bsf	3,5	;RP0=1, select bank1
   948  014E  1303               	bcf	3,6	;RP1=0, select bank1
   949  014F  0623               	xorwf	(_UartBuffer^(0+128)+3),w
   950  0150  1D03               	btfss	3,2
   951  0151  0008               	return
   952  0152  3047               	movlw	71
   953  0153  0624               	xorwf	(_UartBuffer^(0+128)+4),w
   954  0154  1D03               	btfss	3,2
   955  0155  0008               	return
   956  0156  3041               	movlw	65
   957  0157  0625               	xorwf	(_UartBuffer^(0+128)+5),w
   958  0158  1D03               	btfss	3,2
   959  0159  0008               	return
   960                           
   961                           ;GPS.c: 24: gps.lat_cardinal = UartBuffer[28];
   962  015A  083C               	movf	(_UartBuffer^(0+128)+28),w
   963  015B  00F6               	movwf	??__GPSRoutines
   964  015C  0876               	movf	??__GPSRoutines,w
   965  015D  1283               	bcf	3,5	;RP0=0, select bank0
   966  015E  1303               	bcf	3,6	;RP1=0, select bank0
   967  015F  00D4               	movwf	_gps+21
   968                           
   969                           ;GPS.c: 25: gps.lon_cardinal = UartBuffer[41];
   970  0160  1683               	bsf	3,5	;RP0=1, select bank1
   971  0161  1303               	bcf	3,6	;RP1=0, select bank1
   972  0162  0849               	movf	(_UartBuffer^(0+128)+41),w
   973  0163  00F6               	movwf	??__GPSRoutines
   974  0164  0876               	movf	??__GPSRoutines,w
   975  0165  1283               	bcf	3,5	;RP0=0, select bank0
   976  0166  1303               	bcf	3,6	;RP1=0, select bank0
   977  0167  00D5               	movwf	_gps+22
   978                           
   979                           ;GPS.c: 26: for(i=0;i<9;i++)
   980  0168  01A1               	clrf	__GPSRoutines@i
   981  0169  01A2               	clrf	__GPSRoutines@i+1
   982  016A  0822               	movf	__GPSRoutines@i+1,w
   983  016B  3A80               	xorlw	128
   984  016C  00FF               	movwf	127
   985  016D  3080               	movlw	128
   986  016E  027F               	subwf	127,w
   987  016F  1D03               	skipz
   988  0170  2973               	goto	u475
   989  0171  3009               	movlw	9
   990  0172  0221               	subwf	__GPSRoutines@i,w
   991  0173                     u475:	
   992  0173  1803               	btfsc	3,0
   993  0174  2994               	goto	l967
   994  0175                     l961:	
   995                           
   996                           ;GPS.c: 27: gps.latitude[i] = UartBuffer[i+18];
   997  0175  1283               	bcf	3,5	;RP0=0, select bank0
   998  0176  1303               	bcf	3,6	;RP1=0, select bank0
   999  0177  0821               	movf	__GPSRoutines@i,w
  1000  0178  3E12               	addlw	18
  1001  0179  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
  1002  017A  0084               	movwf	4
  1003  017B  1383               	bcf	3,7	;select IRP bank1
  1004  017C  0800               	movf	0,w
  1005  017D  00F6               	movwf	??__GPSRoutines
  1006  017E  0821               	movf	__GPSRoutines@i,w
  1007  017F  3E3F               	addlw	(low (_gps| 0))& (0+255)
  1008  0180  0084               	movwf	4
  1009  0181  0876               	movf	??__GPSRoutines,w
  1010  0182  0080               	movwf	0
  1011  0183  3001               	movlw	1
  1012  0184  07A1               	addwf	__GPSRoutines@i,f
  1013  0185  1803               	skipnc
  1014  0186  0AA2               	incf	__GPSRoutines@i+1,f
  1015  0187  3000               	movlw	0
  1016  0188  07A2               	addwf	__GPSRoutines@i+1,f
  1017  0189  0822               	movf	__GPSRoutines@i+1,w
  1018  018A  3A80               	xorlw	128
  1019  018B  00FF               	movwf	127
  1020  018C  3080               	movlw	128
  1021  018D  027F               	subwf	127,w
  1022  018E  1D03               	skipz
  1023  018F  2992               	goto	u485
  1024  0190  3009               	movlw	9
  1025  0191  0221               	subwf	__GPSRoutines@i,w
  1026  0192                     u485:	
  1027  0192  1C03               	skipc
  1028  0193  2975               	goto	l961
  1029  0194                     l967:	
  1030                           
  1031                           ;GPS.c: 28: gps.latitude[i] = '\0';
  1032  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0196  0821               	movf	__GPSRoutines@i,w
  1035  0197  3E3F               	addlw	(low (_gps| 0))& (0+255)
  1036  0198  0084               	movwf	4
  1037  0199  1383               	bcf	3,7	;select IRP bank0
  1038  019A  0180               	clrf	0
  1039                           
  1040                           ;GPS.c: 29: for(i=0;i<10;i++)
  1041  019B  01A1               	clrf	__GPSRoutines@i
  1042  019C  01A2               	clrf	__GPSRoutines@i+1
  1043  019D  0822               	movf	__GPSRoutines@i+1,w
  1044  019E  3A80               	xorlw	128
  1045  019F  00FF               	movwf	127
  1046  01A0  3080               	movlw	128
  1047  01A1  027F               	subwf	127,w
  1048  01A2  1D03               	skipz
  1049  01A3  29A6               	goto	u495
  1050  01A4  300A               	movlw	10
  1051  01A5  0221               	subwf	__GPSRoutines@i,w
  1052  01A6                     u495:	
  1053  01A6  1803               	btfsc	3,0
  1054  01A7  29C7               	goto	l981
  1055  01A8                     l975:	
  1056                           
  1057                           ;GPS.c: 30: gps.longitude[i] = UartBuffer[i+30];
  1058  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1059  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1060  01AA  0821               	movf	__GPSRoutines@i,w
  1061  01AB  3E1E               	addlw	30
  1062  01AC  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
  1063  01AD  0084               	movwf	4
  1064  01AE  1383               	bcf	3,7	;select IRP bank1
  1065  01AF  0800               	movf	0,w
  1066  01B0  00F6               	movwf	??__GPSRoutines
  1067  01B1  0821               	movf	__GPSRoutines@i,w
  1068  01B2  3E49               	addlw	(low ((_gps| 0+10)))& (0+255)
  1069  01B3  0084               	movwf	4
  1070  01B4  0876               	movf	??__GPSRoutines,w
  1071  01B5  0080               	movwf	0
  1072  01B6  3001               	movlw	1
  1073  01B7  07A1               	addwf	__GPSRoutines@i,f
  1074  01B8  1803               	skipnc
  1075  01B9  0AA2               	incf	__GPSRoutines@i+1,f
  1076  01BA  3000               	movlw	0
  1077  01BB  07A2               	addwf	__GPSRoutines@i+1,f
  1078  01BC  0822               	movf	__GPSRoutines@i+1,w
  1079  01BD  3A80               	xorlw	128
  1080  01BE  00FF               	movwf	127
  1081  01BF  3080               	movlw	128
  1082  01C0  027F               	subwf	127,w
  1083  01C1  1D03               	skipz
  1084  01C2  29C5               	goto	u505
  1085  01C3  300A               	movlw	10
  1086  01C4  0221               	subwf	__GPSRoutines@i,w
  1087  01C5                     u505:	
  1088  01C5  1C03               	skipc
  1089  01C6  29A8               	goto	l975
  1090  01C7                     l981:	
  1091                           
  1092                           ;GPS.c: 31: gps.longitude[i] = '\0';
  1093  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1094  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1095  01C9  0821               	movf	__GPSRoutines@i,w
  1096  01CA  3E49               	addlw	(low ((_gps| 0+10)))& (0+255)
  1097  01CB  0084               	movwf	4
  1098  01CC  1383               	bcf	3,7	;select IRP bank0
  1099  01CD  0180               	clrf	0
  1100                           
  1101                           ;GPS.c: 32: _GPS_location_avail = 1;
  1102  01CE  3001               	movlw	1
  1103  01CF  00D6               	movwf	__GPS_location_avail
  1104  01D0  3000               	movlw	0
  1105  01D1  00D7               	movwf	__GPS_location_avail+1
  1106                           
  1107                           ;GPS.c: 33: }
  1108                           ;GPS.c: 34: }else{
  1109  01D2  0008               	return
  1110  01D3                     l985:	
  1111                           
  1112                           ;GPS.c: 35: rec_count = 0;
  1113  01D3  01F7               	clrf	_rec_count
  1114  01D4  01F8               	clrf	_rec_count+1
  1115                           
  1116                           ;GPS.c: 36: UartBuffer[rec_count] = '\0';
  1117  01D5  0877               	movf	_rec_count,w
  1118  01D6  3EA0               	addlw	(low (_UartBuffer| 0))& (0+255)
  1119  01D7  0084               	movwf	4
  1120  01D8  1383               	bcf	3,7	;select IRP bank1
  1121  01D9  0180               	clrf	0
  1122                           
  1123                           ;GPS.c: 37: _GPS_location_avail = 0;
  1124  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1125  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1126  01DC  01D6               	clrf	__GPS_location_avail
  1127  01DD  01D7               	clrf	__GPS_location_avail+1
  1128  01DE  0008               	return
  1129  01DF                     __end_of__GPSRoutines:	
  1130                           
  1131                           	psect	text5
  1132  02F8                     __ptext5:	
  1133 ;; *************** function _receive_byte *****************
  1134 ;; Defined at:
  1135 ;;		line 33 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  x               1    5[COMMON] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         1       0       0       0       0
  1151 ;;      Temps:          1       0       0       0       0
  1152 ;;      Totals:         2       0       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;;		__GPSRoutines
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _receive_byte
  1166  02F8                     _receive_byte:	
  1167                           
  1168                           ;main.c: 35: char x;
  1169                           ;main.c: 36: RCIE = 0;
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _receive_byte: [wreg]
  1173  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  1174  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  1175  02FA  128C               	bcf	12,5	;volatile
  1176  02FB                     l64:	
  1177                           ;main.c: 37: while(!RCIF);
  1178                           
  1179  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1180  02FC  1E8C               	btfss	12,5	;volatile
  1181  02FD  2AFB               	goto	l64
  1182                           
  1183                           ;main.c: 38: x = RCREG;
  1184  02FE  081A               	movf	26,w	;volatile
  1185  02FF  00F4               	movwf	??_receive_byte
  1186  0300  0874               	movf	??_receive_byte,w
  1187  0301  00F5               	movwf	receive_byte@x
  1188                           
  1189                           ;main.c: 39: RCIE = 1;
  1190  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0304  168C               	bsf	12,5	;volatile
  1193                           
  1194                           ;main.c: 43: return x;
  1195  0305  0875               	movf	receive_byte@x,w
  1196  0306  0008               	return
  1197  0307                     __end_of_receive_byte:	
  1198                           
  1199                           	psect	text6
  1200  0314                     __ptext6:	
  1201 ;; *************** function __GPSInit *****************
  1202 ;; Defined at:
  1203 ;;		line 42 in file "GPS.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    2
  1224 ;; This function calls:
  1225 ;;		Absolute function
  1226 ;;		_my_serial_init
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function __GPSInit
  1234  0314                     __GPSInit:	
  1235                           
  1236                           ;GPS.c: 43: _UartInit();
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in __GPSInit: [wreg+status,2+status,0+pclath+cstack]
  1240  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0316  0858               	movf	__UartInit,w
  1243  0317  120A  118A  2100   	fcall	fptable
  1244                           
  1245                           ;GPS.c: 44: rec_count =0;
  1246  031A  01F7               	clrf	_rec_count
  1247  031B  01F8               	clrf	_rec_count+1
  1248  031C  0008               	return
  1249  031D                     __end_of__GPSInit:	
  1250                           
  1251                           	psect	text7
  1252  02D2                     __ptext7:	
  1253 ;; *************** function _my_serial_init *****************
  1254 ;; Defined at:
  1255 ;;		line 9 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;;		__GPSInit
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _my_serial_init
  1286  02D2                     _my_serial_init:	
  1287                           
  1288                           ;main.c: 11: TRISC6 = 0;
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _my_serial_init: [wreg]
  1292  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1293  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1294  02D4  1307               	bcf	7,6	;volatile
  1295                           
  1296                           ;main.c: 12: TRISC7 = 1;
  1297  02D5  1787               	bsf	7,7	;volatile
  1298                           
  1299                           ;main.c: 13: GIE=1;
  1300  02D6  178B               	bsf	11,7	;volatile
  1301                           
  1302                           ;main.c: 14: PEIE=1;
  1303  02D7  170B               	bsf	11,6	;volatile
  1304                           
  1305                           ;main.c: 15: SPBRG= (int)(8e6/9600/16) -1;
  1306  02D8  3033               	movlw	51
  1307  02D9  0099               	movwf	25	;volatile
  1308                           
  1309                           ;main.c: 16: BRGH=1;
  1310  02DA  1518               	bsf	24,2	;volatile
  1311                           
  1312                           ;main.c: 17: SYNC=0;
  1313  02DB  1218               	bcf	24,4	;volatile
  1314                           
  1315                           ;main.c: 18: SPEN=1;
  1316  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1317  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1318  02DE  1798               	bsf	24,7	;volatile
  1319                           
  1320                           ;main.c: 19: TXEN=1;
  1321  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  1322  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  1323  02E1  1698               	bsf	24,5	;volatile
  1324                           
  1325                           ;main.c: 20: RCIE=0;
  1326  02E2  128C               	bcf	12,5	;volatile
  1327                           
  1328                           ;main.c: 21: CREN=1;
  1329  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1330  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1331  02E5  1618               	bsf	24,4	;volatile
  1332  02E6  0008               	return
  1333  02E7                     __end_of_my_serial_init:	
  1334                           
  1335                           	psect	text8
  1336  0307                     __ptext8:	
  1337 ;; *************** function _ISR *****************
  1338 ;; Defined at:
  1339 ;;		line 79 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          4       0       0       0       0
  1356 ;;      Totals:         4       0       0       0       0
  1357 ;;Total ram usage:        4 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		Interrupt level 1
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _ISR
  1368  0307                     _ISR:	
  1369                           
  1370                           ;main.c: 80: if(RCIF)
  1371  0307  1A8C               	btfsc	12,5	;volatile
  1372                           
  1373                           ;main.c: 81: RCREG;
  1374  0308  081A               	movf	26,w	;volatile
  1375  0309  0873               	movf	??_ISR+3,w
  1376  030A  00FF               	movwf	127
  1377  030B  0872               	movf	??_ISR+2,w
  1378  030C  008A               	movwf	10
  1379  030D  0871               	movf	??_ISR+1,w
  1380  030E  0084               	movwf	4
  1381  030F  0E70               	swapf	??_ISR^(0+-128),w
  1382  0310  0083               	movwf	3
  1383  0311  0EFE               	swapf	126,f
  1384  0312  0E7E               	swapf	126,w
  1385  0313  0009               	retfie
  1386  0314                     __end_of_ISR:	
  1387  0006                     
  1388                           	psect	intentry
  1389  0004                     __pintentry:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _ISR: [wreg]
  1392                           
  1393  0004                     interrupt_function:	
  1394  007E                     saved_w	set	btemp
  1395  0004  00FE               	movwf	btemp
  1396  0005  0E03               	swapf	3,w
  1397  0006  00F0               	movwf	??_ISR
  1398  0007  0804               	movf	4,w
  1399  0008  00F1               	movwf	??_ISR+1
  1400  0009  080A               	movf	10,w
  1401  000A  00F2               	movwf	??_ISR+2
  1402  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1403  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1404  000D  087F               	movf	btemp+1,w
  1405  000E  00F3               	movwf	??_ISR+3
  1406  000F  120A  118A  2B07   	ljmp	_ISR
  1407                           
  1408                           	psect	functab
  1409  0100                     __pfunctab:	
  1410  0100                     __fptable:	
  1411  0100                     fptable:	
  1412  0100  00FF               	movwf	(btemp+1)& (0+127)
  1413  0101  3001               	movlw	high fptable
  1414  0102  008A               	movwf	10
  1415  0103  087F               	movf	(btemp+1)& (0+127),w
  1416  0104  0782               	addwf	2,f
  1417  0105                     fpbase:	
  1418  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1419  0106                     fp__my_serial_init:	
  1420  0106  120A  118A  2AD2   	ljmp	_my_serial_init
  1421  0109                     fp__receive_byte:	
  1422  0109  120A  118A  2AF8   	ljmp	_receive_byte
  1423  010C                     fp__send_byte:	
  1424  010C                     entry__send_byte:	
  1425  010C  120A  118A  2AE7   	ljmp	_send_byte
  1426  010F                     __end_of__fptable:	
  1427  007E                     btemp	set	126	;btemp
  1428  007E                     wtemp0	set	126


Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         72
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     31      58
    BANK1            80     25      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _UartSendByte	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), send_byte(), 

    _UartInit	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), my_serial_init(), 

    _UartReceiveByte	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> Absolute function(), receive_byte(), 

    send_str@str	PTR unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[14]), STR_2(CODE[14]), main@gps(BANK1[23]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->__GPSRoutines
    _main->_send_byte
    _send_str->_send_byte
    __GPSRoutines->_receive_byte

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->__GPSValues

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    1558
                                             27 BANK0      4     4      0
                                              0 BANK1     25    25      0
                           __GPSInit
                       __GPSRoutines
                         __GPSValues
                          _send_byte
                           _send_str
 ---------------------------------------------------------------------------------
 (1) _send_str                                             3     1      2     691
                                              0 BANK0      3     1      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (2) _send_byte                                            3     2      1     301
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) __GPSValues                                          27     4     23       0
                                              0 BANK0     27     4     23
 ---------------------------------------------------------------------------------
 (1) __GPSRoutines                                         4     4      0     424
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                   Absolute function *
                       _receive_byte *
 ---------------------------------------------------------------------------------
 (2) _receive_byte                                         2     2      0      34
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) __GPSInit                                             0     0      0       0
                   Absolute function *
                     _my_serial_init *
 ---------------------------------------------------------------------------------
 (2) _my_serial_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   __GPSInit
     Absolute function(Fake) *
     _my_serial_init *
   __GPSRoutines
     Absolute function(Fake) *
     _receive_byte *
   __GPSValues
   _send_byte
   _send_str
     _send_byte

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      8A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     19      46       7       87.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      8A      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Sep 29 21:15:44 2017

                       pc 0002               __CFG_CP$OFF 0000                        l64 02FB  
                      l58 02EB                        fsr 0004                       l913 0289  
                     l935 0124                       l961 0175                       l981 01C7  
                     l975 01A8                       l967 0194                       l985 01D3  
                     _GIE 005F                       u520 021C                       u505 01C5  
                     u425 0145              __CFG_CPD$OFF 0000                       _ISR 0307  
                     u390 02C4                       u537 02F2                       u475 0173  
                     u485 0192                       u495 01A6                       _gps 003F  
                     fsr0 0004                       indf 0000              __CFG_IESO$ON 0000  
            fp__send_byte 010C              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1007 0207                      l1027 0283                      STR_1 0056  
                    STR_2 0048                      STR_3 003A                      _BRGH 04C2  
                    _CREN 00C4                      _PEIE 005E                      _RCIE 0465  
                    _RCIF 0065                      _SPEN 00C7                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 01DF                      btemp 007E  
    __end_of__GPSRoutines 01DF                      start 0012             __CFG_MCLRE$ON 0000  
              __GPSValues 02B1                     ??_ISR 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
                   _SPBRG 0099                     _TXREG 0019                     main@i 00CD  
                   fpbase 0105            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of__GPSInit 031D  
         __initialization 0015              __end_of_main 0289             receive_byte@x 0075  
                  ??_main 003B            __GPSRoutines@i 0021            __GPSRoutines@x 0020  
         fp__receive_byte 0109                    _ANSELH 0189                    _TRISC6 043E  
                  _TRISC7 043F          __end_of__fptable 010F            __CFG_PWRTE$OFF 0000  
              _UartBuffer 00A0               ?__GPSValues 0020                    fptable 0100  
        __end_of_send_str 02B1                    fptotal 0006                    saved_w 007E  
   __size_of__GPSRoutines 00D0       __GPS_location_avail 0056   __end_of__initialization 0026  
           ?_receive_byte 0070            __pcstackCOMMON 0070          __UartReceiveByte 0079  
            __GPSRoutines 010F                 ?__GPSInit 0070       __size_of__GPSValues 0021  
              __pbssBANK0 003F                __pbssBANK1 00A0            ??_receive_byte 0074  
              __pnvCOMMON 0079                __pmaintext 01DF                __pintentry 0004  
      __size_of_send_byte 0011           entry__send_byte 010C                ??__GPSInit 0074  
              __stringtab 002A               send_str@str 0020                 ?_send_str 0020  
                 __ptext1 0289                   __ptext2 02E7                   __ptext3 02B1  
                 __ptext4 010F                   __ptext5 02F8                   __ptext6 0314  
                 __ptext7 02D2                   __ptext8 0307   __size_of_my_serial_init 0015  
       fp__my_serial_init 0106              __size_of_ISR 000D                   main@gps 00CF  
                 clrloop0 031E      end_of_initialization 0026         __end_of_send_byte 02F8  
              ??_send_str 0022              ??__GPSValues 0037      __end_of_receive_byte 0307  
      __end_of__GPSValues 02D2       start_initialization 0015               __end_of_ISR 0314  
       __size_of__GPSInit 0009  __CFG_FOSC$INTRC_NOCLKOUT 0000                 __UartInit 0058  
          _my_serial_init 02D2               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00CD         __size_of__fptable 000F  
               __pnvBANK0 0058             __UartSendByte 0059                 __pfunctab 0100  
   __size_of_receive_byte 000F         __size_of_send_str 0028    __end_of_my_serial_init 02E7  
               __pstrings 002A                 _rec_count 0077         interrupt_function 0004  
            _receive_byte 02F8                 clear_ram0 031D                 _send_byte 02E7  
         ?_my_serial_init 0070               __stringbase 0039              send_byte@val 0074  
                __GPSInit 0314                ?_send_byte 0074        __end_of__stringtab 003A  
           ?__GPSRoutines 0070                  __fptable 0100         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 00AA                  _send_str 0289            ??__GPSRoutines 0076  
                intlevel1 0100               ??_send_byte 0075                 stringcode 0034  
              _OSCCONbits 008F                  stringdir 0034                  stringtab 002A  
        ??_my_serial_init 0074  
